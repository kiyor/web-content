{"codeList":["analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\": [\"asciifolding\"],\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"tokenizer\", \"standard\");\nanalyzerParams.put(\"filter\", Collections.singletonList(\"asciifolding\"));\n","const analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\": [\"asciifolding\"],\n};\n","analyzerParams = map[string]any{\"tokenizer\": \"standard\", \"filter\": []any{\"asciifolding\"}}\n","# restful\nanalyzerParams='{\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    \"asciifolding\"\n  ]\n}'\n\n","analyzer_params = {\n    \"tokenizer\": \"standard\",\n    \"filter\": [\"asciifolding\"],\n}\n","Map<String, Object> analyzerParams = new HashMap<>();\nanalyzerParams.put(\"tokenizer\", \"standard\");\nanalyzerParams.put(\"filter\", Collections.singletonList(\"asciifolding\"));\n","// javascript\n","analyzerParams = map[string]any{\"tokenizer\": \"standard\", \"filter\": []any{\"asciifolding\"}}\n","# restful\n","['Cafe', 'Moller', 'serves', 'creme', 'brulee', 'and', 'pinatas']\n"],"headingContent":"ASCII folding","anchorList":[{"label":"ASCII 折叠","href":"ASCII-folding","type":1,"isActive":false},{"label":"配置","href":"Configuration","type":2,"isActive":false},{"label":"示例","href":"Examples","type":2,"isActive":false}]}